<?xml version="1.0" encoding="utf-8"?>

<!-- 
Copyright (c) 2011, PIA. All rights reserved.

This file is part of Eskimo.

Eskimo is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Eskimo is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Eskimo.  If not, see <http://www.gnu.org/licenses/>.
-->

<!--- The android skin class for the increment button Eskimo numeric stepper skin.

@see com.pialabs.eskimo.skins.mobile.android.NumericStepperSkin 
@see com.pialabs.eskimo.skins.mobile.android.NumericStepperDecrementButtonSkin
@see com.pialabs.eskimo.skins.mobile.android.NumericStepperIncrementButtonSkin
@see spark.components.NumericStepper
@see spark.components.Button

-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:s="library://ns.adobe.com/flex/spark"
                   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
                   minWidth="21" minHeight="21" alpha.disabled="0.5"
                   focusEnabled="false">

    <fx:Metadata>
        <![CDATA[ 
        /** 
        * @copy spark.skins.spark.ApplicationSkin#hostComponent
        */
        [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata>

    <fx:Script fb:purpose="styling">
        <![CDATA[
            import spark.components.Group;
            /* Define the skin elements that should not be colorized.
            For button, the graphics are colorized but the label is not. */
            static private const exclusions:Array = ["labelDisplay", "fill", "border", "shadow"];
            
            /**
             * @private
             */
            override public function get colorizeExclusions():Array
            {
                return exclusions;
            }
            
            /**
             * @private
             */
            override protected function initializationComplete():void
            {
                useChromeColor = true;
                super.initializationComplete();
            }
            
            /**
             *  @private
             */
            [Bindable]
            private var _downColor:uint;
            
            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
            {
                _downColor = getStyle("chromeColor");
                
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
        ]]>
    </fx:Script>

    <!-- states -->
    <s:states>
        <s:State name="up"/>
        <s:State name="over"/>
        <s:State name="down"/>
        <s:State name="disabled"/>
    </s:states>

    <!-- layer 1: fill -->
    <!--- @private -->
    <s:Rect id="fill" left="1" right="1" top="1" bottom="1" topLeftRadiusX="2"
            topRightRadiusX="2">
        <s:fill>
            <s:SolidColor color="#f8f8f8" color.down="{_downColor}"/>
        </s:fill>
    </s:Rect>

    <!-- layer 2: shadow -->
    <!--- @private -->
    <s:Rect id="shadow" left="1" right="1" top="1" bottom="1" topLeftRadiusX="2"
            topRightRadiusX="2">
        <s:fill>
            <s:LinearGradient rotation="90">
                <s:GradientEntry ratio="0" color="#000000" alpha="0"/>
                <s:GradientEntry ratio="0.05" color="#000000" alpha="0.05"/>
                <s:GradientEntry ratio="0.1" color="#000000" alpha="0.10"/>
                <s:GradientEntry ratio="0.14" color="#000000" alpha="0.05"/>
                <s:GradientEntry ratio="0.18" color="#000000" alpha="0"/>
                <s:GradientEntry ratio="0.46" color="#000000" alpha="0"/>
                <s:GradientEntry ratio="0.7" color="#000000" alpha="0.05"/>
                <s:GradientEntry ratio="1" color="#000000" alpha="0.10"/>
            </s:LinearGradient>
        </s:fill>
    </s:Rect>

    <!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
    <!--- @private -->
    <s:Rect id="border" left="0" right="0" bottom="0" height="1">
        <s:fill>
            <s:SolidColor color="#383838"/>
        </s:fill>
    </s:Rect>

    <!-- layer 8: text -->
    <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay  -->
    <s:Label id="labelDisplay" textAlign="center" maxDisplayedLines="1"
             horizontalCenter="0" verticalCenter="1" verticalAlign="middle"
             left="10" right="10" top="2" bottom="2">
        <s:filters>
            <s:DropShadowFilter inner="true" angle="90" alpha="0.3"/>
        </s:filters>
    </s:Label>

</s:SparkButtonSkin>
