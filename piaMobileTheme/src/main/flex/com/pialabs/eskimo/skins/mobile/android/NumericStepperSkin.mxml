<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark NumericStepper component. The skin for the text input field on a NumericStepper
component is defined by the NumericStepperTextInputSkin class.

@see spark.components.NumericStepper
@see spark.skins.spark.NumericStepperTextInputSkin

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minHeight="130"
             minWidth="70" alpha.disabled="0.5" focusEnabled="false">

    <fx:Metadata>
        <![CDATA[ 
        /** 
        * @copy spark.skins.spark.ApplicationSkin#hostComponent
        */
        [HostComponent("spark.components.NumericStepper")]
        ]]>
    </fx:Metadata>

    <fx:Script fb:purpose="styling">
        <![CDATA[
            /* Define the skin elements that should not be colorized.
            For numeric stepper, the skin itself is colorized but the individual parts are not. */
            static private const exclusions:Array = ["textDisplay", "decrementButton", "incrementButton", "border"];
            
            /**
             * @private
             */
            override public function get colorizeExclusions():Array
            {
                return exclusions;
            }
            
            /**
             * @private
             */
            override protected function initializationComplete():void
            {
                useChromeColor = true;
                super.initializationComplete();
            }
            /**
            * @private
            */
            private var chromeColorChanged:Boolean;
            
            /**
             *  @private
             */
            override protected function commitProperties():void
            {
                super.commitProperties();
                
                if (chromeColorChanged)
                {
                    incrementButton.setStyle("chromeColor", getStyle("chromeColor"));
                    decrementButton.setStyle("chromeColor", getStyle("chromeColor"));
                    chromeColorChanged = false;
                }
            }
            
            /**
             *  @private
             */
            override public function styleChanged(styleProp:String):void
            {
                var allStyles:Boolean = !styleProp || styleProp == "styleName";
                
                super.styleChanged(styleProp);
                
                if (allStyles || styleProp == "chromeColor")
                {
                    chromeColorChanged = true;
                    invalidateProperties();
                }
            }
        ]]>

    </fx:Script>

    <s:states>
        <s:State name="normal"/>
        <s:State name="disabled"/>
    </s:states>

    <s:Group top="0" right="0" bottom="0" left="0">

        <s:layout>
            <s:VerticalLayout gap="0" horizontalAlign="justify"/>
        </s:layout>

        <!--- The default class is NumericStepperIncrementButtonSkin.
        @copy spark.components.Spinner#incrementButton
        @see spark.skins.spark.NumericStepperIncrementButtonSkin -->
        <s:Button id="incrementButton" height="100%" label="+"
                  tabEnabled="false" color="#909090"
                  skinClass="com.pialabs.eskimo.skins.mobile.android.NumericStepperIncrementButtonSkin"/>

        <!--- The default class is NumericStepperTextInputSkin.
        @copy spark.components.NumericStepper#textDisplay
        @see spark.skins.spark.NumericStepperTextInputSkin -->
        <s:TextInput id="textDisplay" height="100%" editable="false"
                     selectable="false"
                     skinClass="com.pialabs.eskimo.skins.mobile.android.NumericStepperTextInputSkin"/>

        <!--- The default class is NumericStepperDecrementButtonSkin.
        @copy spark.components.Spinner#decrementButton
        @see spark.skins.spark.NumericStepperDecrementButtonSkin -->
        <s:Button id="decrementButton" height="100%" label="-"
                  tabEnabled="false" color="#909090"
                  skinClass="com.pialabs.eskimo.skins.mobile.android.NumericStepperDecrementButtonSkin"/>

    </s:Group>

    <!--- Define the border of the skin -->
    <s:Rect id="border" left="0" right="0" top="0" bottom="0" radiusX="2">
        <s:stroke>
            <s:LinearGradientStroke weight="2" rotation="90">
                <s:GradientEntry color="#787878"/>
                <s:GradientEntry color="#202020" ratio="0.1"/>
            </s:LinearGradientStroke>
        </s:stroke>
    </s:Rect>
</s:SparkSkin>
