<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/mx" clipAndEnableScrolling="true"
        currentState="normal">
    <!-- host component -->
    <fx:Metadata>
    [HostComponent("com.piaction.components.MobileContextMenu")]
    
  </fx:Metadata>

    <!-- SkinParts
    name=headerDisplay, type=spark.components.Label, required=false
    name=listDisplay, type=spark.components.List, required=false
    -->

    <fx:Script>
        <![CDATA[
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
            {
                if (header != null)
                {
                    header.height = getStyle("headerHeight");
                }
                
                if (headerDisplay != null)
                {
                    headerDisplay.height = getStyle("headerHeight");
                }
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
                
                if (icon != null)
                {
                    icon.source = getStyle("contextMenuIcon");
                }
            
            }
            
            override protected function measure():void
            {
                if (header)
                {
                    header.height = headerDisplay.height = getStyle("headerHeight");
                }
                super.measure();
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="normal" stateGroups="openedGroup"/>
        <s:State name="closed" stateGroups="closedGroup"/>
        <s:State name="disabled" stateGroups="openedGroup"/>
        <s:State name="normalWithoutHeader"
                 stateGroups="openedGroup, withoutHeaderGroup"/>
        <s:State name="closedWithoutHeader"
                 stateGroups="closedGroup, withoutHeaderGroup"/>
        <s:State name="disabledWithoutHeader"
                 stateGroups="openedGroup, withoutHeaderGroup"/>
    </s:states>

    <!-- Transitions for open and close -->
    <s:transitions>
        <s:Transition fromState="*" toState="normal" autoReverse="true">
            <s:Fade duration="150" target="{content}"/>
        </s:Transition>
        <s:Transition fromState="*" toState="disabled" autoReverse="true">
            <s:Fade duration="150" target="{content}"/>
        </s:Transition>
        <s:Transition fromState="*" toState="closed" autoReverse="true">
            <s:Fade duration="150" target="{content}"/>
        </s:Transition>
        <s:Transition fromState="*" toState="normalWithoutHeader"
                      autoReverse="true">
            <s:Fade duration="150" target="{content}"/>
        </s:Transition>
        <s:Transition fromState="*" toState="closedWithoutHeader"
                      autoReverse="true">
            <s:Fade duration="150" target="{content}"/>
        </s:Transition>
        <s:Transition fromState="*" toState="disabledWithoutHeader"
                      autoReverse="true">
            <s:Fade duration="150" target="{content}"/>
        </s:Transition>
    </s:transitions>

    <s:Group id="content" top="0" right="0" bottom="0" left="0"
             visible.closed="false">

        <s:Rect id="background" top="0" left="0" bottom="0" right="0">
            <s:fill>
                <s:SolidColor color="#FFFFFF"/>
            </s:fill>
        </s:Rect>

        <s:Rect id="header" width="100%" height="10"
                excludeFrom="withoutHeaderGroup">
            <s:fill>
                <s:SolidColor color="#424242"/>
            </s:fill>
        </s:Rect>
        <s:Group width="100%" height="100%">

            <s:layout>
                <s:VerticalLayout gap="0"/>
            </s:layout>

            <s:HGroup width="100%" verticalAlign="middle" paddingLeft="10"
                      paddingRight="10" gap="10"
                      excludeFrom="withoutHeaderGroup">
                <s:BitmapImage id="icon"/>
                <s:Label id="headerDisplay" width="100%" height="100%"
                         color="#FFFFFF" verticalAlign="middle"/>
            </s:HGroup>

            <s:List id="listDisplay" width="100%" height="100%"
                    verticalScrollPolicy="auto">
                <s:layout>
                    <s:VerticalLayout gap="0" verticalAlign="top"
                                      horizontalAlign="contentJustify"/>
                </s:layout>
            </s:List>
        </s:Group>

        <s:Rect top="0" left="0" bottom="0" right="0">
            <s:stroke>
                <s:SolidColorStroke color="#FFFFFF" weight="2"/>
            </s:stroke>
        </s:Rect>

        <s:filters>
            <s:GlowFilter color="0" blurX="15" blurY="15"/>
        </s:filters>
    </s:Group>
</s:Skin>
