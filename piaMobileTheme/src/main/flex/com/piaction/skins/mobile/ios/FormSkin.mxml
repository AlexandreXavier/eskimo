<?xml version="1.0" encoding="utf-8"?>
<!--- The default skin class for a Spark Form container.

This skin defines a contentGroup for the Form container with a
FormLayout as its layout object. The FormLayout is a VerticalLayout
that has additional logic to align the columns of FormItems.

@see spark.components.Form
@see spark.layouts.FormLayout

-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5"
        cacheAsBitmap="true">

    <fx:Metadata>
        <![CDATA[ 
        /** 
        * @copy spark.skins.spark.ApplicationSkin#hostComponent
        */
        [HostComponent("spark.components.SkinnableContainer")]
        
        /**
        * Define the border color
        * @defaults 0xb4b7bb
        */
        [Style(name="borderColor", inherit="no", type="uint")]
        /**
        * Define the border alpha
        * @defaults 1
        */
        [Style(name="borderAlpha", inherit="no", type="Number")]
        ]]>
    </fx:Metadata>

    <fx:Script>
        <![CDATA[
            import mx.containers.FormItem;
            import mx.core.IVisualElement;
            
            import spark.components.FormItem;
            import spark.layouts.VerticalLayout;
            
            /**
             * @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
            {
                super.updateDisplayList(unscaledWidth, unscaledHeight);
                
                bgFill.color = getStyle("backgroundColor");
                strokeFill.color = getStyle("borderColor");
                strokeFill.alpha = getStyle("borderAlpha");
                
                var formItem:IVisualElement;
                var gap:int;
                if (contentGroup.layout.hasOwnProperty("gap"))
                {
                    gap = contentGroup.layout["gap"];
                }
                
                if (contentGroup.layout is VerticalLayout || contentGroup.layout is FormLayout)
                {
                    lineOverlay.graphics.clear();
                    lineOverlay.graphics.beginFill(strokeFill.color, strokeFill.alpha);
                    for (var i:int = 0; i < contentGroup.numElements - 1; i++)
                    {
                        formItem = contentGroup.getElementAt(i);
                        
                        if (formItem is spark.components.FormItem)
                        {
                            var lineY:int = formItem.getLayoutBoundsY() + formItem.getLayoutBoundsHeight() + gap / 2;
                            lineOverlay.graphics.drawRect(0, lineY, unscaledWidth, 1);
                        }
                    }
                    lineOverlay.graphics.endFill();
                }
            
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="normal"/>
        <s:State name="disabled"/>
    </s:states>
    <!--- Defines the appearance of the SkinnableContainer class's background. -->
    <s:Rect id="background" left="0" right="0" top="0" bottom="0" radiusX="10"
            radiusY="10">
        <s:stroke>
            <s:SolidColorStroke id="strokeFill" color="#b4b7bb" weight="1"/>
        </s:stroke>
        <s:fill>
            <s:SolidColor id="bgFill"/>
        </s:fill>
        <s:filters>
            <s:DropShadowFilter distance="1" angle="90" color="#FFFFFF"
                                blurY="0" blurX="0" alpha="0.5"/>
        </s:filters>
    </s:Rect>
    <!--- @copy spark.components.SkinnableContainer#contentGroup -->
    <s:Group id="contentGroup" showErrorSkin="true" showErrorTip="true" left="0"
             right="0" top="0" bottom="0" added="invalidateDisplayList()">
        <s:layout>
            <s:FormLayout paddingTop="-7" paddingBottom="-7" paddingLeft="0"
                          paddingRight="-25" gap="-14"/>
        </s:layout>
    </s:Group>

    <!--- Overlay where line separators are drew -->
    <s:Group id="lineOverlay" top="0" right="0" bottom="0" left="0"
             mouseEnabled="false"/>


</s:Skin>
