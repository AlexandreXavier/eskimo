<?xml version="1.0" encoding="utf-8"?>
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
                   xmlns:s="library://ns.adobe.com/flex/spark" 
                   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
                   minWidth="40" minHeight="40" 
                   alpha.disabled="0.5">
  
  <fx:Metadata>
    <![CDATA[ 
    /** 
    * @copy spark.skins.spark.ApplicationSkin#hostComponent
    */
    [HostComponent("spark.components.ButtonBarButton")]
    [Style(name="labelDropShadowColor", inherit="no", type="uint")]
    ]]>
  </fx:Metadata>
  
  <fx:Script fb:purpose="styling">
    <![CDATA[         
      import spark.components.Group;
      /* Define the skin elements that should not be colorized. 
      For button, the graphics are colorized but the label is not. */
      static private const exclusions:Array = ["labelDisplay","whiteHalo","innerShadow","border","glow"];
      
      /** 
       * @private
       */     
      override public function get colorizeExclusions():Array {return exclusions;}
      
      /**
       * @private
       */
      override protected function initializationComplete():void
      {
        useChromeColor = true;
        super.initializationComplete();
      }  
      
      /**
       *  @private
       */
      override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
      {
        var cr:Number = getStyle("cornerRadius");
        
        if (cornerRadius != cr && !isNaN(cr))
        {
          cornerRadius = cr;
          fill.topRightRadiusX = fill.bottomRightRadiusX = cornerRadius;
          whiteHalo.topRightRadiusX = whiteHalo.bottomRightRadiusX =  cornerRadius;
          down.topRightRadiusX = down.bottomRightRadiusX =  cornerRadius;
          innerShadow.topRightRadiusX = innerShadow.bottomRightRadiusX =  cornerRadius;
          border.topRightRadiusX = border.bottomRightRadiusX = cornerRadius;
          glow.topRightRadiusX = glow.bottomRightRadiusX = cornerRadius;
          glow.height = 2*cornerRadius;
        }
        
        
        var dpColor:uint = getStyle("labelDropShadowColor");
        
        labelDropShadowColor.color = dpColor;
        
        
        super.updateDisplayList(unscaledWidth, unscaledHeight);
      }
      
      private var cornerRadius:Number = 5;
      
    ]]>        
  </fx:Script>
  
  <!-- states -->
  <s:states>
    <s:State name="up" />
    <s:State name="over" stateGroups="overStates" />
    <s:State name="down" stateGroups="downStates" />
    <s:State name="disabled" stateGroups="disabledStates" />
    <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
    <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
    <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
    <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
  </s:states>
  
  <s:Rect id="fill" left="1" right="1" top="0" bottom="1" topRightRadiusX="5" bottomRightRadiusX="5">
    <s:fill>
      <s:LinearGradient rotation="90">
        <s:GradientEntry color="#DDDDDD" ratio="0"/>
        <s:GradientEntry color="#BBBBBB" ratio="1"/>
      </s:LinearGradient>
    </s:fill>
  </s:Rect>
  
  <s:Rect id="whiteHalo" left="1" right="1" top="0" bottom="1"  topRightRadiusX="5" bottomRightRadiusX="5">
    <s:fill>
      <s:LinearGradient rotation="90">
        <s:GradientEntry color="#FFFFFF" ratio="0" alpha="0.41"/>
        <s:GradientEntry color="#FFFFFF" ratio="0.5" alpha="0.11"/>
        <s:GradientEntry color="#FFFFFF" ratio="0.5" alpha="0"/>
        <s:GradientEntry color="#FFFFFF" ratio="1" alpha="0"/>
      </s:LinearGradient>
    </s:fill>
  </s:Rect>
  
  <s:Rect id="down" left="1" right="1" top="0" bottom="1"  topRightRadiusX="5" bottomRightRadiusX="5" visible="false" visible.down="true">
    <s:fill>
      <s:SolidColor color="#000000" alpha=".3"/>
    </s:fill>
  </s:Rect>
  
  <s:Rect id="innerShadow" left="0" right="1" top="1" bottom="1"  topRightRadiusX="5" bottomRightRadiusX="5">
    <s:stroke>
      <s:LinearGradientStroke rotation="90" weight="1">
        <s:GradientEntry color="0x000000" alpha=".3" ratio="0"/>
        <s:GradientEntry color="0x000000" alpha="0" ratio=".2"/>
      </s:LinearGradientStroke>
    </s:stroke>  
  </s:Rect>
  
  <s:Rect id="border" left="0" right="1" top="0" bottom="1"  topRightRadiusX="5" bottomRightRadiusX="5">
    <s:stroke>
      <s:SolidColorStroke weight="1" color="#000000" alpha="0.5"/>
    </s:stroke>  
  </s:Rect>
  
  
  <s:Rect id="glow" left="-1" right="0" bottom="0" topRightRadiusX="5" bottomRightRadiusX="5" height="10">
    <s:stroke>
      <s:LinearGradientStroke rotation="90">
        <s:GradientEntry ratio="0" alpha="0" color="#FFFFFF"/>
        <s:GradientEntry ratio="0.5" alpha="0" color="#FFFFFF"/>
        <s:GradientEntry ratio="1" alpha="0.2" color="#FFFFFF"/>
      </s:LinearGradientStroke>
    </s:stroke>
  </s:Rect>
  
 
  
  <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay  -->
  <s:Label id="labelDisplay"
           textAlign="center"
           color="#FFFFFF"
           maxDisplayedLines="1"
           horizontalCenter="0" verticalCenter="1" verticalAlign="middle"
           fontWeight="normal"
           fontSize="16"
           left="10" right="10" top="2" bottom="2">
    <s:filters>
      <s:DropShadowFilter id="labelDropShadowColor" distance="1" angle="-90" blurY="1" blurX="0" alpha="0.7"/>
    </s:filters>
  </s:Label>
  
</s:SparkButtonSkin>
